name: GHAction example  

on:
  workflow_dispatch:
  push:

# checking pus
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      
    steps:
      - 
        name: Check out the source_repo
        uses: actions/checkout@v4 # akcja sprawdzająca dostęp do repozytorium
      
      - 
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3 # akcja instalująca statyczne pliki binarne qemu

      - 
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3 # akcja tworząca builder

      - 
        name: Log in to the Github container registry # logowanie do ghcr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}

      -
        name: Build local image # lokalne budowanie obrazu
        run: |
            docker buildx inspect --bootstrap
            docker build . --file Dockerfile --tag zadanie2test:v1

      -
        name: Scan local image # sprawdzenie czy obraz nie zawiera zagrożeń krytycznych
        id: image-scan
        run: | 
            curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
            docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            sh install-scout.sh
            docker scout cves --exit-code --only-severity critical zadanie2test:v1
            echo "SCAN_RESULT=$?" >> "$GITHUB_ENV"
      
      -
        name: Docker metadata definitions # pobranie metadanych o obrazie
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ vars.GH_USERNAME_LOWERCASE }}/zadanie2
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}


      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=gha
          cache-to: |
            type=gha 
          tags: ${{ steps.meta.outputs.tags }}

      # - 
      #   name: Build and push Docker image # zbudowanie obrazu i wypchnięcie go do repozytorium
      #   id: push
      #   run: | 
      #       docker build . --tag ${{ steps.meta.outputs.tags }} --cache-from="type=gha" --cache-to="type=gha" --platform linux/amd64,linux/arm64
      #       docker push ${{ steps.meta.outputs.tags }}
#